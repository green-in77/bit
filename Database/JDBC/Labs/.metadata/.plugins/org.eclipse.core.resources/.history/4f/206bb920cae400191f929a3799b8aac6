import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

/*
 DML (insert, update, delete)
 JDBC 작업
 1. 결과 집합이 없다. (반영만 함 / resultSet (X))
 2. 반영에 대한 결과 return (반영된 행의 갯수 return)
 ex) JAVA 코드
 update emp set sal=0 >> 반영 >> return 14 (14개 행 반영됨)
 update emp set sal=100 where empno=9999 >> 실행했지만 반영되지않음 >> return 0
 
 KEY POINT
 DB작업
 insert, update, delete >> 트랜잭션 >> 반드시 commit, rollback 강제 : 전체반영, 전체취소
 
 JDBC API 통해서 DML 작업 >> default >> auto commit
 java code로 DML 작업하면 무조건 실제 반영됨 >> 자동 커밋....
 필요하면 commit, rollback java 코드에서 제어 가능 >> auto commit 옵션 >> false >> 반드시 commit, rollback 해줘야 함.  
*/
public class Ex03_Oracle_DMLUpdate {
	public static void main(String[] args) {
		Connection conn = null;
		Statement stmt = null;
		
		try {
			Class.forName("oracle.jdbc.OracleDriver"); //메모리에 로드. >> new Driver
			System.out.println("오라클 드라이버 로딩");
			
			//1. DB연결
			conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","bituser","1004");
			System.out.println("연결끊어졌니?? " + conn.isClosed() + " (False >> 연결)"); //너 연결 끊어졌니?? -> 아니!!! false
			
			//2. 명령생성(CRUD)
			stmt = conn.createStatement();
			
			//3. 실행구문
			//String sql = "insert into dememp(empno,ename,deptno) values (100,'홍길동',10)";
			
			//입력받는 값을 update
			int deptno=0;
			
			Scanner sc = new Scanner(System.in);
					
			System.out.println("부서번호 입력");
			deptno = Integer.parseInt(sc.nextLine());
			
			//고전적인방법
			String sql = "update dememp set sal=0 where deptno="+deptno;
			
			//현대적인방법(parameter 처리 효율적으로..) >> 실제로 사용하는 것
			//String sql = "insert into dememp(empno,ename,deptno) values (?,?,?)";
			//String sql = "insert into dememp(empno,ename,deptno) values (100,'홍길동',10)";
			
			
			
			//4. 실행 (결과집합X, 반영된 행의 갯수 return)
			int resultrow = stmt.executeUpdate(sql);
			
			//5. 처리
			if(resultrow > 0) {
				System.out.println("반영된 행의 갯수 : " + resultrow);
			}else {
				//반영된 행이 없다면 update는 반영되지 않을 수 있음.
				System.out.println("Insert Fail : " + resultrow);
			}		
		}catch(Exception e) {
			System.out.println("Insert Fail 예외" + e.getMessage());
		}finally {
			try {
				stmt.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
}