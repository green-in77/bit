/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2019-11-01 08:12:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Top_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <meta name=\"robots\" content=\"all,follow\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Bootstrap CSS-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"vendor/bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Font Awesome CSS-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\" integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\" crossorigin=\"anonymous\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Google fonts - Popppins for copy-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Poppins:300,400,800\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- orion icons-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/orionicons.css\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- theme stylesheet-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.red.css\" id=\"theme-stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Custom stylesheet - for your changes-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/custom.css\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Favicon-->\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"");
      out.print(request.getContextPath() );
      out.write("/img/favicon.png?3\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Tweaks for older IEs--><!--[if lt IE 9]>\r\n");
      out.write("        <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\r\n");
      out.write("        <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script><![endif]-->\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <!-- navbar-->\r\n");
      out.write("    <header class=\"header\">\r\n");
      out.write("      <nav class=\"navbar navbar-expand-lg px-4 py-2 bg-white shadow\">\r\n");
      out.write("      \t<a href=\"#\" class=\"sidebar-toggler text-gray-500 mr-4 mr-lg-5 lead\"><i class=\"fas fa-align-left\"></i></a>\r\n");
      out.write("      \t<a href=\"index.jsp\" class=\"navbar-brand font-weight-bold text-uppercase text-base\">Team_1</a>\r\n");
      out.write("        <ul class=\"ml-auto d-flex align-items-center list-unstyled mb-0\">\r\n");
      out.write("          ");

            	String id = null;
				id = (String)session.getAttribute("userid");
				if(id != null){ //세션에 로그인 된 아이디가 있다면..
					out.print(id + " 회원님 반갑습니다 :)<br>");
				}
			
      out.write("\r\n");
      out.write("          \r\n");
      out.write("          <li class=\"nav-item dropdown ml-auto\">\r\n");
      out.write("          \t<a id=\"userInfo\" href=\"http://example.com\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"nav-link dropdown-toggle\">\r\n");
      out.write("          \t<img src=\"img/avatar.png\" alt=\"Jason Doe\" style=\"max-width: 2.5rem;\" class=\"img-fluid rounded-circle shadow\"></a>\r\n");
      out.write("            ");

				if(id != null){ //세션에 로그인 된 아이디가 있다면..
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<div aria-labelledby=\"userInfo\" class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t");

					if(id.equals("admin")){
			
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<a href=\"memberlist.jsp\" class=\"dropdown-item\">Member List</a>\r\n");
      out.write("\t\t\t");

					}
			
      out.write("\r\n");
      out.write("\t\t\t\t\t              \r\n");
      out.write("\t\t             <a href=\"logout.jsp\" class=\"dropdown-item\">Logout</a>\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("\t\t    ");

				}else{
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<div aria-labelledby=\"userInfo\" class=\"dropdown-menu\">              \r\n");
      out.write("\t\t             <a href=\"login.jsp\" class=\"dropdown-item\">Login</a>           \r\n");
      out.write("\t\t             <a href=\"signup.jsp\" class=\"dropdown-item\">Sign up</a>\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("\t\t    ");

				}
			
      out.write("\r\n");
      out.write("            \r\n");
      out.write("          </li>\r\n");
      out.write("          \r\n");
      out.write("        </ul>\r\n");
      out.write("      </nav>\r\n");
      out.write("    </header>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
