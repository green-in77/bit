1. 현재 프로젝트 게시판 만들기 연습(Model1 방식으로)
1.1 [JSP] 가 [클라이언트] 요청을 받고 흐름을 제어

단 ) Model1 > DTO, DAO 사용

단 ) Servlet 사용하지 않아요.

1.2
	<form action="loginok.jsp" 코딩....
	
1.3 Model2 기반 MVC
	[servlet] 가 [틀라이언트] 요청을 받고 흐름을 제어
	
	<form action="Memolist" 코딩....
------------------------------------------------------------	
게시판 만들기

1. DB설계(Table 만들기)
1.1 요구사항 파악
- 게시판 종류
-- 일반게시판 (답글X) : 공지사항
-- 계층형게시판(답글O)
-- 일반게시판,계층형게시판 >> 댓글O (옵션) : 비동기(기능적요구사항)

게시판(일반,계층형)
--회원전용
--비회원 : 비번필수

일반게시판 : 회원전용 (로그인 한 사용자(권한처리 : session))
일반게시판 : 비회원(비번처리 필수 : 수정,삭제 권한처리)

계층형게시판 : 회원전용 (로그인 한 사용자(권한처리 : session))
계층형게시판 : 비회원 (비번처리 필수 : 수정,삭제 권한처리)

-----------------------------------------------------------
테이블 설계
(비인증형 게시판)
create table board(
	idx number constraint pk_board_idx primary key,
		--글번호(오라클 : sequence 객체 / ms,mysql : 테이블에 종속적인 방법으로...자동증가)
	writer varchar2(30) not null,
		--작성자 필수입력사항 : 직접입력받아야함 (회원전용에서는 로그인 한 ID : session)
	pwd varchar2(30) not null,
		--비밀번호 필수입력사항 : 직접입력받아야함 (회원전용에서는 비번 X)
	subject varchar2(50) not null,
		--제목
	content varchar2(2000) not null,
		--글내용
	writedate date default SYSDATE,
		--작성일 (DB서버날짜 기본값 설정)
	readnum number default 0,
		--조회수 (기본값 0), 업무로직구현
	filename varchar2(50),
		--파일명 또는 파일경로
	homepage varchar2(20),
		--홈페이지 주소.. 옵션
	email varchar2(20)
		--옵션..(마케팅활용 등...)
);

-----------------------------------------------------------
테이블 설계
(계층형 게시판)
create table multiboard(
	idx number constraint pk_board_idx primary key,
		--글번호(오라클 : sequence 객체 / ms,mysql : 테이블에 종속적인 방법으로...자동증가)
	writer varchar2(30) not null,
		--작성자 회원전용에서는 로그인 한 ID : session
	subject varchar2(50) not null,
		--제목
	content varchar2(2000) not null,
		--글내용
	writedate date default SYSDATE,
		--작성일 (DB서버날짜 기본값 설정)
	readnum number default 0,
		--조회수 (기본값 0), 업무로직구현
	filename varchar2(50),
		--파일명 또는 파일경로
	homepage varchar2(20),
		--홈페이지 주소.. 옵션
	email varchar2(20)
		--옵션..(마케팅활용 등...)
		
	--추가적인 컬럼
	refer number default 0, --참조글 or 글의 그룹번호
	depth number default 0, --글의 깊이(들여쓰기 - 화면처리목적) 로직X
	step number default 0, --글의 정렬 순서, 답글 정렬
);

idx, ref, depth, step, title
 1	  1		0	  0		원본글1
 2	  2		0	  0		원본글2
 
 3	  1		1	  1		원본글1의 답글1
 
 4	  2		1	  1		원본글2의 답글1
 
 5	  1		2	  3		원본글1의 답글1의 답글1(idx 3의 답글1)
 6 	  1		2	  2		원본글1의 답글1의 답글2(idx 3의 답글2)
 
 
order by ref desc, step asc; >> 최신 답글이 위로 오게...
idx, ref, depth, step, title
 2	  2		0	  0		원본글2
 4	  2		1	  1		>원본글2의 답글1
 1	  1		0	  0		원본글1
 3	  1		1	  1		>원본글1의 답글1
 7	  1		2	  2		>>원본글1의 답글1의 답글3(idx 3의 답글3)
 6 	  1		2	  3		>>원본글1의 답글1의 답글2(idx 3의 답글2)
 5	  1		2	  4		>>원본글1의 답글1의 답글1(idx 3의 답글1)
-------------------------------------------------------------------
일반게시판 select * from board order by idx desc; (최신글 위로 정렬)

계층형게시판
논리 2가지

1. 최신 답글 위로
	규칙 : 원본글 : depth, step >> 0 0
		같은 ref에서 현재 읽은 글의 step 값 보다 더 큰 step 이 있다면 +1
		     답글 : depth+1, step+1

select * from multiboard order ref desc, step asc;
		     
2. 답글 순서로 정렬
select * from multiboard order ref desc, step desc;

--------------------------------------------------------
순번처리(oracle)
create sequence board_idx
start with 1
increment by 1
-----------------------------------------------------------------------
댓글 테이블 생성
--누구의 댓글인가
--일반게시판 글번호 필요

create table reply(
	no number primary key,
	writer varchar2(30),
	pwd varchar2(30),
	content varchar2(2000),
	writedate date default sysdate,
	idx number references board(idx)
);

