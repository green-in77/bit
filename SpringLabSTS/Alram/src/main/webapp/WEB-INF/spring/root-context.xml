<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 공통 DB작업  -->
 <bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 	<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" />
 	<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" /> -->
 	
 	<property name="url" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE" />
 	<!-- <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" /> -->
 	
 	<property name="username" value="springuser" />
 	<property name="password" value="1004" />
 </bean>
 
 <bean id="" class="org.springframework.jdbc.core.JdbcTemplate">
 	<property name="dataSource" ref="driverManagerDataSource"></property>
 </bean>
 
 <!-- Mybatis 설정
기본 자바코드 : SqlMapConfig.xml 에서 설정했던 작업 (DB연결 ,mapper 설정)
파일 없어지고 설명파일안에서   > SqlSessionFactoryBean
기존 java 코드 : builder 사용 > Factory 객체 > sqlsession 생성 > 사용 

두개의 클래스가 위 작업 처리 
SqlSessionFactoryBean
SqlSessionTemplate
 -->
<bean id="sqlSessionFactoryBean"  class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="driverManagerDataSource"></property>
    <property name="mapperLocations" value="classpath*:kr/or/bit/mapper/*xml" />
    <!-- <property name="configLocation" value="classpath:/mybatis-config.xml" />
    mybatis-config.xml 을 만들어서...
    아래 설정을 만들 수 있다.
    	<configuration>		
		    <settings>
		        <setting name="mapUnderscoreToCamelCase" value="true"/>
		    </settings>
		    <typeAliases></typeAliases>
		</configuration>
    -->
</bean> 

<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
</bean>
<!-- Mybatis 설정  -->

<!-- 시큐리티 암호화 -->
<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />	
</beans>
